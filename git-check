#!/bin/sh

print_statements=$(git config "gitcheck.statements")

# check for print statements that are being introduced
run_check () {
	total_amount=0
	set added_filename
	set curr_line_num
	set diff_output=$(git diff)
	(
		# allows diff_output to be read line by line, separated by '\n'
		IFS=$'\n'
		for line in $diff_output; do
			# iterate the curr_line_num
			if [ ${line:0:1} != "-" ] && [ $line != "\\ No newline at end of file" ]; then
				curr_line_num=$((curr_line_num+1))
			fi
			# get the starting line number
			if [[ $line =~ ^\@\@ ]]; then
				curr_line_num=$(echo "$line" | grep -o -P '(?<=\+)[0-9]*(?=,)')
				curr_line_num=$((curr_line_num-1))
			fi
			if [[ $line =~ ^\+\+\+ ]]; then
				filename=$(echo "${line#*/}")
				added_filename=false
			else
				for s in "${PRINT_STATEMENTS[@]}"; do
					echo $s
					if [ $(echo "$line" | grep $s) ] && [ ${line:0:1} == "+" ]; then
						if [ $added_filename == false ]; then
							#output+=($(printf " "))
							#output+=($(printf '%s' "$filename"))
							printf '%s' "$filename"
							added_filename=true
						fi
						#output+=($(printf '%6s: %s' "$curr_line_num" "$line"))
						printf '%6s: %s' "$curr_line_num" "$line"
						total_amount=$((total_amount+1))
					fi
				done
			fi
		done

		echo "$total_amount"
		printf 'Found %d print statement%s\n' $total_amount $([ "$total_amount" != 1 ] && echo 's')
		#for line in "${output[@]}"; do
		#	echo $line
		#done
	)

	unset total_amount
	unset added_filename
	unset curr_line_num
	unset diff_output
}

run_check
